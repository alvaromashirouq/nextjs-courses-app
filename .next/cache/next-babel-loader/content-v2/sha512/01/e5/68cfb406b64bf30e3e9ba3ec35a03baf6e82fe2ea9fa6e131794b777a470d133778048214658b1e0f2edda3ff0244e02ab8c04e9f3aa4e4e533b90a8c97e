{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/alvaro.martinez/training/nextjs-courses-app/pages/index.js\";\nimport { MongoClient } from 'mongodb';\nimport MeetupList from '../components/meetups/MeetupList';\n\nconst Home = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MeetupList, {\n      meetups: props.meetups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n/*\nexport async function getServerSideProps(context) {\n  const req = context.req;\n  const res = context.res;\n\n  return {\n    props: {\n      meetups: DUMMY_DATA\n    }\n  };\n}\n*/\n\n\nexport async function getStaticProps() {\n  const client = await MongoClient.connect('mongodb+srv://alvaromashiro:C7aR2HIEIPPCDkvf@cluster0.bwryvdh.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupCollection = db.collection('meetups');\n  const meetups = await meetupCollection.find().toArray();\n  client.close();\n  return {\n    props: {\n      meetups: meetups.map(meetup => ({\n        id: meetup._id.toString(),\n        title: meetup.title,\n        address: meetup.address,\n        description: meetup.description,\n        image: meetup.image\n      }))\n    }\n  };\n}\nexport default Home;","map":{"version":3,"sources":["/Users/alvaro.martinez/training/nextjs-courses-app/pages/index.js"],"names":["MongoClient","MeetupList","Home","props","meetups","getStaticProps","client","connect","db","meetupCollection","collection","find","toArray","close","map","meetup","id","_id","toString","title","address","description","image"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,SAA5B;AACA,OAAOC,UAAP,MAAuB,kCAAvB;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AACtB,sBACE;AAAA,2BACE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAKD,CAND;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMN,WAAW,CAACO,OAAZ,CACnB,+GADmB,CAArB;AAIA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,gBAAgB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAzB;AAEA,QAAMN,OAAO,GAAG,MAAMK,gBAAgB,CAACE,IAAjB,GAAwBC,OAAxB,EAAtB;AAEAN,EAAAA,MAAM,CAACO,KAAP;AACA,SAAO;AACLV,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAEA,OAAO,CAACU,GAAR,CAAaC,MAAD,KAAa;AAChCC,QAAAA,EAAE,EAAED,MAAM,CAACE,GAAP,CAAWC,QAAX,EAD4B;AAEhCC,QAAAA,KAAK,EAAEJ,MAAM,CAACI,KAFkB;AAGhCC,QAAAA,OAAO,EAAEL,MAAM,CAACK,OAHgB;AAIhCC,QAAAA,WAAW,EAAEN,MAAM,CAACM,WAJY;AAKhCC,QAAAA,KAAK,EAAEP,MAAM,CAACO;AALkB,OAAb,CAAZ;AADJ;AADF,GAAP;AAWD;AACD,eAAepB,IAAf","sourcesContent":["import { MongoClient } from 'mongodb';\nimport MeetupList from '../components/meetups/MeetupList';\n\nconst Home = (props) => {\n  return (\n    <>\n      <MeetupList meetups={props.meetups} />\n    </>\n  );\n};\n\n/*\nexport async function getServerSideProps(context) {\n  const req = context.req;\n  const res = context.res;\n\n  return {\n    props: {\n      meetups: DUMMY_DATA\n    }\n  };\n}\n*/\nexport async function getStaticProps() {\n  const client = await MongoClient.connect(\n    'mongodb+srv://alvaromashiro:C7aR2HIEIPPCDkvf@cluster0.bwryvdh.mongodb.net/meetups?retryWrites=true&w=majority'\n  );\n\n  const db = client.db();\n\n  const meetupCollection = db.collection('meetups');\n\n  const meetups = await meetupCollection.find().toArray();\n\n  client.close();\n  return {\n    props: {\n      meetups: meetups.map((meetup) => ({\n        id: meetup._id.toString(),\n        title: meetup.title,\n        address: meetup.address,\n        description: meetup.description,\n        image: meetup.image\n      }))\n    }\n  };\n}\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}