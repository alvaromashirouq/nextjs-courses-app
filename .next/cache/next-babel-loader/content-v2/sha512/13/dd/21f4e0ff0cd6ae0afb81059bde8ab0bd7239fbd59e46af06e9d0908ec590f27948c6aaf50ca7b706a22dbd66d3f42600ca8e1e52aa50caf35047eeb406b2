{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/alvaro.martinez/training/nextjs-courses-app/pages/index.js\",\n    _this = this;\n\nimport MeetupList from '../components/meetups/MeetupList';\n\nvar Home = function Home(props) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MeetupList, {\n      meetups: props.meetups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false);\n};\n/*\nexport async function getServerSideProps(context) {\n  const req = context.req;\n  const res = context.res;\n\n  return {\n    props: {\n      meetups: DUMMY_DATA\n    }\n  };\n}\n*/\n\n\n_c = Home;\nexport var __N_SSG = true;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/alvaro.martinez/training/nextjs-courses-app/pages/index.js"],"names":["MeetupList","Home","props","meetups"],"mappings":";;;;;;AACA,OAAOA,UAAP,MAAuB,kCAAvB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,KAAD,EAAW;AACtB,sBACE;AAAA,2BACE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAKD,CAND;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;KAnBMF,I;;AA4CN,eAAeA,IAAf","sourcesContent":["import { MongoClient } from 'mongodb';\nimport MeetupList from '../components/meetups/MeetupList';\n\nconst Home = (props) => {\n  return (\n    <>\n      <MeetupList meetups={props.meetups} />\n    </>\n  );\n};\n\n/*\nexport async function getServerSideProps(context) {\n  const req = context.req;\n  const res = context.res;\n\n  return {\n    props: {\n      meetups: DUMMY_DATA\n    }\n  };\n}\n*/\nexport async function getStaticProps() {\n  const client = await MongoClient.connect(\n    'mongodb+srv://alvaromashiro:C7aR2HIEIPPCDkvf@cluster0.bwryvdh.mongodb.net/meetups?retryWrites=true&w=majority'\n  );\n\n  const db = client.db();\n\n  const meetupCollection = db.collection('meetups');\n\n  const meetups = await meetupCollection.find().toArray();\n\n  client.close();\n  return {\n    props: {\n      meetups: meetups.map((meetup) => ({\n        id: meetup._id.toString(),\n        title: meetup.title,\n        address: meetup.address,\n        description: meetup.description,\n        image: meetup.image\n      }))\n    }\n  };\n}\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}